apiVersion: apps/v1
kind: Deployment
metadata:
  name: skala-lifecycle-test
  namespace: skala-practice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: skala-lifecycle-test
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: '/prometheus'
        update: 909212f1e79c684a3d2706dd63fbd111
      labels:
        app: skala-lifecycle-test
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: skala-k8s-practice
                operator: In
                values:
                - "yes"
      containers:
      - name: healthcheck-server
        image: amdp-registry.skala-ai.com/skala25a/skala-healthcheck-server:1.0.1
        imagePullPolicy: Always
        env:
        - name: LOGGING_LEVEL
          value: DEBUG
        - name: USER_NAME
          value: skala
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /metrics
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30
      tolerations:
      - effect: 
        key: skala-k8s-practice
        operator: Equal
        value: "yes"

